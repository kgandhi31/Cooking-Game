package FinalProject;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class addHotdogItemsPanel extends javax.swing.JPanel {

    public addHotdogItemsPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hotdogPicLLabel = new javax.swing.JLabel();
        addHotdogItemsLabel = new javax.swing.JLabel();
        hotdogPicRLabel = new javax.swing.JLabel();
        hotdogIng1Label = new javax.swing.JLabel();
        hotdogIng1TextField = new javax.swing.JTextField();
        hotdogIng2Label = new javax.swing.JLabel();
        hotdogIng2TextField = new javax.swing.JTextField();
        hotdogIng3Label = new javax.swing.JLabel();
        hotdogIng3TextField = new javax.swing.JTextField();
        hotdogIng4Label = new javax.swing.JLabel();
        hotdogIng4TextField = new javax.swing.JTextField();
        sideLabel = new javax.swing.JLabel();
        sideTextField = new javax.swing.JTextField();
        drinkLabel = new javax.swing.JLabel();
        drinkTextField = new javax.swing.JTextField();
        saveNewHotdogItemsButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 204, 0));
        setMaximumSize(new java.awt.Dimension(800, 370));
        setMinimumSize(new java.awt.Dimension(800, 370));

        hotdogPicLLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FinalProject/Real Sprites/HotdogButton_C.png"))); // NOI18N

        addHotdogItemsLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        addHotdogItemsLabel.setText("Add Hotdog Items");

        hotdogPicRLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FinalProject/Real Sprites/HotdogButton_C.png"))); // NOI18N

        hotdogIng1Label.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        hotdogIng1Label.setText("Ingredient 1:");

        hotdogIng2Label.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        hotdogIng2Label.setText("Ingredient 2:");

        hotdogIng3Label.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        hotdogIng3Label.setText("Ingredient 3:");

        hotdogIng4Label.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        hotdogIng4Label.setText("Ingredient 4:");

        sideLabel.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        sideLabel.setText("Side:");

        drinkLabel.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        drinkLabel.setText("Drink:");

        saveNewHotdogItemsButton.setBackground(new java.awt.Color(204, 255, 255));
        saveNewHotdogItemsButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        saveNewHotdogItemsButton.setText("Save New Items");
        saveNewHotdogItemsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveNewHotdogItemsButtonMouseClicked(evt);
            }
        });
        saveNewHotdogItemsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveNewHotdogItemsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(hotdogPicLLabel)
                        .addGap(35, 35, 35)
                        .addComponent(addHotdogItemsLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(hotdogIng1Label)
                                .addGap(30, 30, 30)
                                .addComponent(hotdogIng1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(hotdogIng3Label)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(hotdogIng4Label)
                                .addGap(30, 30, 30)
                                .addComponent(hotdogIng4TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(hotdogIng2Label)
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hotdogIng2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hotdogIng3TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hotdogPicRLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(drinkLabel)
                            .addComponent(sideLabel))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(drinkTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sideTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(saveNewHotdogItemsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(addHotdogItemsLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(hotdogPicRLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(hotdogPicLLabel)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hotdogIng1Label)
                    .addComponent(hotdogIng1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hotdogIng2Label)
                            .addComponent(hotdogIng2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hotdogIng3Label)
                            .addComponent(hotdogIng3TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sideLabel)
                            .addComponent(sideTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(drinkLabel)
                            .addComponent(drinkTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addComponent(saveNewHotdogItemsButton)))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hotdogIng4Label)
                    .addComponent(hotdogIng4TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(68, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveNewHotdogItemsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveNewHotdogItemsButtonMouseClicked
        frame = new JFrame("Exit");
        if (JOptionPane.showConfirmDialog(frame, "Are you sure you want to add the new item(s)?", "Save Confirmation", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
        }
        // <editor-fold>//saveIngredients
        if (hotdogIng1TextField.getText().isEmpty() == false) {
            FinalProject.hingredients1.add(hotdogIng1TextField.getText());
            saveHIng1();
            hotdogIng1TextField.setText("");
        }
        if (hotdogIng2TextField.getText().isEmpty() == false) {
            FinalProject.hingredients2.add(hotdogIng2TextField.getText());
            saveHIng2();
            hotdogIng2TextField.setText("");
        }
        if (hotdogIng3TextField.getText().isEmpty() == false) {
            FinalProject.hingredients3.add(hotdogIng3TextField.getText());
            saveHIng3();
            hotdogIng3TextField.setText("");
        }
        if (hotdogIng4TextField.getText().isEmpty() == false) {
            FinalProject.hingredients4.add(hotdogIng4TextField.getText());
            saveHIng4();
            hotdogIng4TextField.setText("");
        }
        if (sideTextField.getText().isEmpty() == false) {
            FinalProject.sideOrder.add(sideTextField.getText());
            saveSide();
            sideTextField.setText("");
        }
        if (drinkTextField.getText().isEmpty() == false) {
            FinalProject.drinkOrder.add(drinkTextField.getText());
            saveDrink();
            drinkTextField.setText("");
        }
        // </editor-fold>//ingredient arrays
    }//GEN-LAST:event_saveNewHotdogItemsButtonMouseClicked

    private void saveNewHotdogItemsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveNewHotdogItemsButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveNewHotdogItemsButtonActionPerformed

    public static void saveHIng1() {
        try {
            FileWriter fh1 = new FileWriter("savedIngredients/hingredients1.txt");
            BufferedWriter bh1 = new BufferedWriter(fh1);
            for (int i = 0; i < FinalProject.hingredients1.size(); i++) {
                bh1.write(FinalProject.hingredients1.get(i) + "\n");
            }
            bh1.close();
        } catch (IOException e) {
            System.out.println("The save was unsuccessful.");
        }
    }

    public static void saveHIng2() {
        try {
            FileWriter fh2 = new FileWriter("savedIngredients/hingredients2.txt");
            BufferedWriter bh2 = new BufferedWriter(fh2);
            for (int i = 0; i < FinalProject.hingredients2.size(); i++) {
                bh2.write(FinalProject.hingredients2.get(i) + "\n");
            }
            bh2.close();
        } catch (IOException e) {
            System.out.println("The save was unsuccessful.");
        }
    }

    public static void saveHIng3() {
        try {
            FileWriter fh3 = new FileWriter("savedIngredients/hingredients3.txt");
            BufferedWriter bh3 = new BufferedWriter(fh3);
            for (int i = 0; i < FinalProject.hingredients3.size(); i++) {
                bh3.write(FinalProject.hingredients3.get(i) + "\n");
            }
            bh3.close();
        } catch (IOException e) {
            System.out.println("The save was unsuccessful.");
        }
    }

    public static void saveHIng4() {
        try {
            FileWriter fh4 = new FileWriter("savedIngredients/hingredients4.txt");
            BufferedWriter bh4 = new BufferedWriter(fh4);
            for (int i = 0; i < FinalProject.hingredients4.size(); i++) {
                bh4.write(FinalProject.hingredients4.get(i) + "\n");
            }
            bh4.close();
        } catch (IOException e) {
            System.out.println("The save was unsuccessful.");
        }
    }

    public static void saveSide() {
        try {
            FileWriter fside = new FileWriter("savedIngredients/sideOrder.txt");
            BufferedWriter bside = new BufferedWriter(fside);
            for (int i = 0; i < FinalProject.sideOrder.size(); i++) {
                bside.write(FinalProject.sideOrder.get(i) + "\n");
            }
            bside.close();
        } catch (IOException e) {
            System.out.println("The save was unsuccessful.");
        }
    }

    public static void saveDrink() {
        try {
            FileWriter fdrink = new FileWriter("savedIngredients/drinkOrder.txt");
            BufferedWriter bdrink = new BufferedWriter(fdrink);
            for (int i = 0; i < FinalProject.drinkOrder.size(); i++) {
                bdrink.write(FinalProject.drinkOrder.get(i) + "\n");
            }
            bdrink.close();
        } catch (IOException e) {
            System.out.println("The save was unsuccessful.");
        }
    }

    private JFrame frame;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addHotdogItemsLabel;
    private javax.swing.JLabel drinkLabel;
    private javax.swing.JTextField drinkTextField;
    private javax.swing.JLabel hotdogIng1Label;
    private javax.swing.JTextField hotdogIng1TextField;
    private javax.swing.JLabel hotdogIng2Label;
    private javax.swing.JTextField hotdogIng2TextField;
    private javax.swing.JLabel hotdogIng3Label;
    private javax.swing.JTextField hotdogIng3TextField;
    private javax.swing.JLabel hotdogIng4Label;
    private javax.swing.JTextField hotdogIng4TextField;
    private javax.swing.JLabel hotdogPicLLabel;
    private javax.swing.JLabel hotdogPicRLabel;
    private javax.swing.JButton saveNewHotdogItemsButton;
    private javax.swing.JLabel sideLabel;
    private javax.swing.JTextField sideTextField;
    // End of variables declaration//GEN-END:variables
}
